"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _InterfaceContent_validation, _InterfaceContent_defaultValue;
Object.defineProperty(exports, "__esModule", { value: true });
exports.InterfaceContent = void 0;
const __version = 'Interface @version 0.0.0';
class InterfaceContent {
    constructor(name, type, defaultValue, required = false, validation) {
        _InterfaceContent_validation.set(this, void 0);
        _InterfaceContent_defaultValue.set(this, void 0);
        this.name = name;
        this.type = type;
        this.required = required || false;
        __classPrivateFieldSet(this, _InterfaceContent_validation, validation, "f");
        this.version = __version;
        this.value = undefined;
        __classPrivateFieldSet(this, _InterfaceContent_defaultValue, defaultValue, "f");
    }
    set content(value) {
        if (value === undefined) {
            value = __classPrivateFieldGet(this, _InterfaceContent_defaultValue, "f");
        }
        if (this.required === true && value === undefined && __classPrivateFieldGet(this, _InterfaceContent_defaultValue, "f") === undefined) {
            throw new ReferenceError(`${this.name} is required to have a value`);
        }
        else if (value !== undefined && this.type.compare(value) !== true) {
            throw new TypeError(`sorry but the value provided for "${this.name}" is not typeof ${this.type.name}`);
        }
        else {
            this.value = value;
        }
        if (typeof __classPrivateFieldGet(this, _InterfaceContent_validation, "f") === 'function') {
            __classPrivateFieldGet(this, _InterfaceContent_validation, "f").call(this, this.value);
        }
    }
}
exports.InterfaceContent = InterfaceContent;
_InterfaceContent_validation = new WeakMap(), _InterfaceContent_defaultValue = new WeakMap();
